{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,SAAUC,SAASC,cAAc,UACjCC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,YAAaJ,SAASC,cAAc,kBAGVH,EAAKM,YAAYC,MAE7CP,EAAKC,SAASO,iBAAiB,SAAS,WACtC,IASqBC,EAAUC,EATHV,EAAKM,YAAYC,MAC7CI,GASAD,EAAQV,EAAKK,UAAUE,MACvBK,QAAQC,IAAIH,GACL,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACT,GAAIH,EAKF,OAJSI,EAAY,GAAeC,OAAZb,EAAS,KAASa,OAANZ,IAGeE,QAA3CC,IAAI,IAAgBS,OAAZb,EAAS,KAASa,OAANZ,EAAM,MAC3BA,EAGCa,EAAW,GAAeD,OAAZb,EAAS,KAASa,OAANZ,MAGnCA,OAvBWc,KAAKH,GAAaI,MAAMF,MA4B9BvB,EAAKK,UAAUE,MAG3B,SAASc,EAAYK,G,IAAEjB,EAAFiB,EAAEjB,SAAUkB,EAAZD,EAAYE,MAC/BC,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCT,OAAfb,EAAS,QAAYa,OAANK,EAAM,OAGxE,SAASJ,EAAWG,G,IAAEjB,EAAFiB,EAAEjB,SAAUuB,EAAZN,EAAYE,MAC9BC,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAqCX,OAAfb,EAAS,QAAYa,OAANU,EAAM,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  buttonEl: document.querySelector('button'),\n  inputDelay: document.querySelector('[name=delay]'),\n  inputstep: document.querySelector('[name=step]'),\n  inputAmount: document.querySelector('[name=amount]'),\n};\n\nconst numberOfRepetitions = refs.inputAmount.value;\n\nrefs.buttonEl.addEventListener('click', () => {\n  const numberOfRepetitions = refs.inputAmount.value;\n  x;\n  // createPromise(numberOfRepetitions);\n  createPromise().then(onFulfiiied).catch(onRejected);\n  //   console.log(numberOfRepetitions);\n  //   console.log(refs.inputAmount.value);\n  //   console.log(refs.inputDelay.value);\n});\n\nfunction createPromise(position, delay) {\n  delay = refs.inputstep.value;\n  console.log(delay);\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve: onFulfiiied(`${position},${delay}`);\n        //   выводится в консоль с задержкой!!! получилось, поиграйся с этим!\n\n        console.log(`{${position},${delay}}`);\n        return delay;\n        // Fulfill\n      } else {\n        reject: onRejected(`${position},${delay}`);\n        // Reject\n      }\n    }, delay);\n  });\n  //   return new promise;\n}\n//\nlet delay = refs.inputstep.value;\n// createPromise(1, 1500)\n\nfunction onFulfiiied({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onRejected({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\n// // console.log(refs.buttonEl);\n// console.log(refs.inputstep.value);\n// console.log(refs.inputDelay.value);\n// console.log(refs.inputAmount);\n// // console.log(numberOfRepetitions);\n\n// for (let i = 1; i < str.length; i++) {\n//   charCodeNext = str[i].charCodeAt();\n//   if (charCodeNext - charCode !== 1) {\n//     return false;\n//   }\n// }\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","buttonEl","document","querySelector","inputDelay","inputstep","inputAmount","value","addEventListener","position","delay1","x","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onFulfiiied","concat","$ce04d3a99e08e73b$var$onRejected","then","catch","param","delay2","delay","$parcel$interopDefault","Notify","success","delay3","failure"],"version":3,"file":"03-promises.01b70a48.js.map"}