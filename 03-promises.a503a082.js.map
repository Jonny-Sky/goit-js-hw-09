{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,UACjCC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,YAAaJ,SAASC,cAAc,kBAGVH,EAAKM,YAAYC,MAE7CP,EAAKC,SAASO,iBAAiB,SAAS,KACVR,EAAKM,YAAYC,MAS/C,IAAuBE,EAAUC,EAR/BC,GASAD,EAAQV,EAAKK,UAAUE,MACvBK,QAAQC,IAAIH,GACL,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACT,GAAIH,EAKF,OAJSI,EAAY,GAAGZ,KAAYC,KAGeE,QAA3CC,IAAI,IAAIJ,KAAYC,MACrBA,EAGCY,EAAW,GAAGb,KAAYC,OAGnCA,OAvBWa,KAAKF,GAAaG,MAAMF,MA4B9BtB,EAAKK,UAAUE,MAG3B,SAASc,GAAYZ,SAAEA,EAAUgB,MAAAC,IAC/BC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBpB,QAAiBiB,OAGhE,SAASJ,GAAWb,SAAEA,EAAUgB,MAAAK,IAC9BH,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoBtB,QAAeqB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  buttonEl: document.querySelector('button'),\n  inputDelay: document.querySelector('[name=delay]'),\n  inputstep: document.querySelector('[name=step]'),\n  inputAmount: document.querySelector('[name=amount]'),\n};\n\nconst numberOfRepetitions = refs.inputAmount.value;\n\nrefs.buttonEl.addEventListener('click', () => {\n  const numberOfRepetitions = refs.inputAmount.value;\n  x;\n  // createPromise(numberOfRepetitions);\n  createPromise().then(onFulfiiied).catch(onRejected);\n  //   console.log(numberOfRepetitions);\n  //   console.log(refs.inputAmount.value);\n  //   console.log(refs.inputDelay.value);\n});\n\nfunction createPromise(position, delay) {\n  delay = refs.inputstep.value;\n  console.log(delay);\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve: onFulfiiied(`${position},${delay}`);\n        //   выводится в консоль с задержкой!!! получилось, поиграйся с этим!\n\n        console.log(`{${position},${delay}}`);\n        return delay;\n        // Fulfill\n      } else {\n        reject: onRejected(`${position},${delay}`);\n        // Reject\n      }\n    }, delay);\n  });\n  //   return new promise;\n}\n//\nlet delay = refs.inputstep.value;\n// createPromise(1, 1500)\n\nfunction onFulfiiied({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onRejected({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\n// // console.log(refs.buttonEl);\n// console.log(refs.inputstep.value);\n// console.log(refs.inputDelay.value);\n// console.log(refs.inputAmount);\n// // console.log(numberOfRepetitions);\n\n// for (let i = 1; i < str.length; i++) {\n//   charCodeNext = str[i].charCodeAt();\n//   if (charCodeNext - charCode !== 1) {\n//     return false;\n//   }\n// }\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","buttonEl","document","querySelector","inputDelay","inputstep","inputAmount","value","addEventListener","position","delay1","x","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onFulfiiied","$47d4ff9957288465$var$onRejected","then","catch","delay","delay2","$parcel$interopDefault","Notify","success","delay3","failure"],"version":3,"file":"03-promises.a503a082.js.map"}